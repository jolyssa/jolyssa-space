---
import { getCollection } from 'astro:content';

// Get all posts (excluding templates) at build time
const music = await getCollection('music', ({ data }) => !data.isTemplate);
const making = await getCollection('making', ({ data }) => !data.isTemplate);
const thoughts = await getCollection('thoughts', ({ data }) => !data.isTemplate);
const consuming = await getCollection('consuming', ({ data }) => !data.isTemplate);
const work = await getCollection('work', ({ data }) => !data.isTemplate);

const allPosts = [
  ...music.map(p => ({ ...p, collection: 'music' })),
  ...making.map(p => ({ ...p, collection: 'making' })),
  ...thoughts.map(p => ({ ...p, collection: 'thoughts' })),
  ...consuming.map(p => ({ ...p, collection: 'consuming' })),
  ...work.map(p => ({ ...p, collection: 'work' })),
];
---

<button 
  id="random-post-btn"
  class="nav-link text-sm font-medium text-text-secondary-light dark:text-text-secondary transition-colors hover:text-accent font-mono block w-full text-left py-2 rounded hover:bg-surface-light dark:hover:bg-surface md:w-auto md:py-0 md:hover:bg-transparent"
  title="Random post"
>
  <span class="md:hidden">🎲 Random post</span>
  <span class="hidden md:inline">🎲</span>
</button>

<script define:vars={{ allPosts }}>
  const randomBtn = document.getElementById('random-post-btn');
  
  const handleRandomPost = () => {
    if (allPosts.length > 0) {
      const randomIndex = Math.floor(Math.random() * allPosts.length);
      const randomPost = allPosts[randomIndex];
      console.log('Navigating to random post:', randomPost.collection, randomPost.slug);
      window.location.href = `/${randomPost.collection}/${randomPost.slug}/`;
    } else {
      console.error('No posts available for random selection');
    }
  };
  
  // Add both click and touchend events for mobile compatibility
  randomBtn?.addEventListener('click', handleRandomPost);
  randomBtn?.addEventListener('touchend', (e) => {
    e.preventDefault(); // Prevent double-firing on mobile
    handleRandomPost();
  });
</script>
