---
import Layout from '../layouts/BaseLayout.astro';
import Card from '../components/Card.astro';
import { getCollection } from 'astro:content';

const [music, making, movement, thoughts, consuming, work] = await Promise.all([
  getCollection('music', ({ data }) => !data.isTemplate),
  getCollection('making', ({ data }) => !data.isTemplate),
  getCollection('movement', ({ data }) => !data.isTemplate),
  getCollection('thoughts', ({ data }) => !data.isTemplate),
  getCollection('consuming', ({ data }) => !data.isTemplate),
  getCollection('work', ({ data }) => !data.isTemplate),
]);

const movementWithDates = movement.map(item => {
  let d = new Date();
  try {
    d = new Date(`${item.data.month} 1, ${item.data.year}`);
  } catch {}
  return { ...item, data: { ...item.data, date: d } };
});

const withCollection = (arr, name) => arr.map(item => ({ ...item, collection: name }));

const allContent = [
  ...withCollection(music, 'music'),
  ...withCollection(making, 'making'),
  ...withCollection(thoughts, 'thoughts'),
  ...withCollection(consuming, 'consuming'),
  ...withCollection(work, 'work'),
  ...withCollection(movementWithDates, 'movement'),
].sort((a, b) => {
  const ad = a.data?.date ? new Date(a.data.date).getTime() : 0;
  const bd = b.data?.date ? new Date(b.data.date).getTime() : 0;
  return bd - ad;
});

const recentItems = allContent.slice(0, 6);

export const goals2025 = [
  { text: 'Make two new remixes', completed: false },
  { text: 'Build an app and have it on the app store', completed: false },
  { text: 'String together a couple of sentences in Korean', completed: false },
  { text: 'Finish 2 DJ mixes and post them on SoundCloud + Youtube', completed: false },
  { text: 'Read 3 books', completed: false, progress: '1/3' },
  { text: 'Launch this website', completed: true },
  { text: 'Finish clay incense holder', completed: true },
];

// Sort goals: incomplete first, completed last
const sortedGoals2025 = goals2025.sort((a, b) => {
  if (a.completed === b.completed) return 0;
  return a.completed ? 1 : -1;
});

// Calculate progress dynamically
const completedCount = goals2025.filter(goal => goal.completed).length;
const totalCount = goals2025.length;

const calendarUrl = import.meta.env.PUBLIC_CALENDAR_URL || 'https://cal.com/jolyssa-armstrong-qmqhat/30min';
---

<Layout 
  title="Home" 
  description="I can't be contained, yet here I am trying to contain myself. Music, code, making, and proof of life."
>
  <!-- Hero Section -->
  <section class="max-w-4xl mx-auto px-4 pt-24 pb-32">
    <div class="text-center space-y-8">
      <h1 class="font-serif text-5xl md:text-6xl font-bold text-text-primary-light dark:text-text-primary">
        jolyssa<span class="text-bleu">.</span>
      </h1>
      
      <div class="space-y-6 text-lg md:text-xl font-mono leading-relaxed text-text-secondary-light dark:text-text-secondary max-w-2xl mx-auto">
        <p>
          i can't be contained, yet here i am trying to contain myself. 
          i'm contradictory. i love the process. i love the human experience.
        </p>
        
        <p>
          i make music, write code, build things with my hands, and think too much. 
          i'm obsessed with feeling alive.
        </p>
        
        <p class="text-text-primary-light dark:text-text-primary">
          selfishly, i want to be remembered. this is how.
        </p>
      </div>
      
      <!-- Office Hours CTA -->
      <div class="card max-w-md mx-auto mt-12">
        <h3 class="font-semibold mb-2 font-serif text-text-primary-light dark:text-text-primary">Want to talk?</h3>
        <p class="text-text-secondary-light dark:text-text-secondary mb-4 font-mono">
          Mondays 4-6pm EST
        </p>
        <a 
          href={calendarUrl}
          target="_blank"
          rel="noopener noreferrer"
          class="btn-primary inline-block font-mono"
        >
          Grab 30 minutes →
        </a>
      </div>
      
      <!-- RSS Subscribe -->
      <div class="flex items-center justify-center gap-4 text-sm font-mono">
        <a href="/rss.xml" class="text-accent hover:text-accent-light transition-colors">
          Subscribe via RSS →
        </a>
        <span class="text-text-secondary">•</span>
        <a 
          href="https://aboutfeeds.com/" 
          target="_blank"
          rel="noopener noreferrer"
          class="text-text-secondary hover:text-accent transition-colors"
        >
          What's RSS?
        </a>
      </div>
    </div>
  </section>
  
  <!-- Goals Widget -->
  <section class="max-w-4xl mx-auto px-4 pb-24">
    <h2 class="font-serif text-4xl font-bold mb-8 text-text-primary-light dark:text-text-primary">
      Oct-Dec 2025: Things I'm Trying
    </h2>
    
    <div class="card space-y-3">
      {sortedGoals2025.map(goal => (
        <div class="flex items-center gap-3 font-mono">
          <span class:list={[
            "text-xl",
            { "opacity-40": goal.completed }
          ]}>
            {goal.completed ? '☑' : '☐'}
          </span>
          <span class:list={[
            "flex-1",
            { "opacity-40 line-through": goal.completed }
          ]}>
            {goal.text}
            {goal.progress && (
              <span class="text-text-secondary ml-2">({goal.progress})</span>
            )}
          </span>
        </div>
      ))}
      
      <div class="border-t border-surface pt-4 mt-4 font-mono">
        <p class="text-text-secondary text-sm">
          2025 Goals (Archived)
        </p>
        <p class="text-text-secondary text-sm">
          Completed: {completedCount}/{totalCount}
        </p>
        <a href="/goals" class="text-accent hover:text-accent-light text-sm">
          View all →
        </a>
      </div>
    </div>
  </section>
  
  <!-- Recent Activity -->
  <section class="max-w-4xl mx-auto px-4 pb-24">
    <h2 class="font-serif text-4xl font-bold mb-8 text-text-primary-light dark:text-text-primary">
      Recent Proof of Life
    </h2>
    
    <div class="space-y-8">
      {recentItems.map(item => (
        <Card item={item} collection={item.collection} />
      ))}
    </div>
    
    <div class="flex items-center justify-center gap-6 mt-12 font-mono">
      <a 
        href="/archive" 
        class="text-accent hover:text-accent-light transition-colors"
      >
        View everything →
      </a>
      <span class="text-text-secondary">•</span>
      <a 
        href="/archive" 
        class="text-accent hover:text-accent-light transition-colors"
      >
        Archive by year →
      </a>
    </div>
  </section>
</Layout>
