---
import Layout from '../../layouts/BaseLayout.astro';
import { getCollection } from 'astro:content';
import { calculateReadingTimeForPost } from '../../utils/readingTime.js';

export async function getStaticPaths() {
  const items = await getCollection('work');
  return items.map(post => ({
    params: { slug: post.slug },
    props: { post }
  }));
}

const { post } = Astro.props;
const { Content } = await post.render();

// Calculate reading time
const readingTime = await calculateReadingTimeForPost(post);
const formattedDate = new Date(post.data.date).toLocaleDateString('en-US', {
  year: 'numeric',
  month: 'long',
  day: 'numeric'
});
---

<Layout 
  title={post.data.title}
  description={post.data.description || ''}
>
  <article class="max-w-4xl mx-auto px-4 py-24">
    <header class="text-center mb-12">
      <h1 class="font-serif text-5xl font-bold mb-3">{post.data.title}</h1>
      <div class="text-text-secondary">
        <time datetime={post.data.date.toISOString()}>{formattedDate}</time>
        <span> • </span>
        <span>{readingTime}</span>
        {post.data.status && (<span> • {post.data.status}</span>)}
        <span> • </span>
        <span>Work</span>
      </div>
    </header>

    <div class="prose-custom">
      <Content />
    </div>

    <div class="mt-6 text-center space-x-4">
      {post.data.liveUrl && (
        <a href={post.data.liveUrl} class="text-accent hover:text-accent-light" target="_blank" rel="noopener noreferrer">Live →</a>
      )}
      {post.data.githubUrl && (
        <a href={post.data.githubUrl} class="text-accent hover:text-accent-light" target="_blank" rel="noopener noreferrer">GitHub →</a>
      )}
    </div>

    <div class="mt-12 text-center">
      <a href="/work" class="text-accent hover:text-accent-light">← Back to work</a>
    </div>
  </article>
</Layout>
