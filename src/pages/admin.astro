---
// Admin dashboard - requires authentication
---

<html lang="en">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <meta name="robots" content="noindex" />
  <title>Admin - Jolyssa Space</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <style>
    body { 
      background: #2D2D2D; 
      color: #E5E5E5; 
      font-family: 'Arial', sans-serif;
    }
    .admin-container {
      max-width: 1200px;
      margin: 0 auto;
      padding: 2rem;
    }
    .collection-card {
      background: #3A3A3A;
      border-radius: 8px;
      padding: 1.5rem;
      margin-bottom: 1rem;
      border-left: 4px solid #4791B1;
    }
    .collection-card:hover {
      background: #404040;
    }
    .login-form {
      max-width: 400px;
      margin: 4rem auto;
      background: #3A3A3A;
      padding: 2rem;
      border-radius: 8px;
      text-align: center;
    }
    .btn-primary {
      background: #4791B1;
      color: white;
      padding: 0.75rem 1.5rem;
      border: none;
      border-radius: 4px;
      cursor: pointer;
      text-decoration: none;
      display: inline-block;
      margin: 0.5rem;
    }
    .btn-primary:hover {
      background: #5BB3D9;
    }
    .btn-secondary {
      background: #6B7280;
      color: white;
      padding: 0.75rem 1.5rem;
      border: none;
      border-radius: 4px;
      cursor: pointer;
      text-decoration: none;
      display: inline-block;
      margin: 0.5rem;
    }
    .btn-secondary:hover {
      background: #9CA3AF;
    }
  </style>
</head>
<body>
  <div class="admin-container">
    <!-- Login Section (shown when not authenticated) -->
    <div id="login-section" class="login-form">
      <h1 style="color: #4791B1; margin-bottom: 2rem;">login.</h1>
      <p style="margin-bottom: 2rem;">for joji only</p>
      <button id="login-btn" class="btn-primary" onclick="loginWithGitHub()">
        <svg style="width: 20px; height: 20px; display: inline; margin-right: 8px;" viewBox="0 0 24 24">
          <path fill="currentColor" d="M12 0C5.374 0 0 5.373 0 12c0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23A11.509 11.509 0 0112 5.803c1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576C20.566 21.797 24 17.3 24 12c0-6.627-5.373-12-12-12z"/>
        </svg>
        Login with GitHub
      </button>
      <div id="login-error" style="color: #ef4444; margin-top: 1rem; display: none;"></div>
    </div>

    <!-- Dashboard Section (shown when authenticated) -->
    <div id="dashboard-section" style="display: none;">
      <header style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 2rem;">
        <h1 style="color: #4791B1;">Content Dashboard</h1>
        <div>
          <span id="user-info" style="margin-right: 1rem;"></span>
          <button class="btn-secondary" onclick="logout()">Logout</button>
        </div>
      </header>

      <div class="collections-grid" style="display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 1rem;">
        <!-- Music Collection -->
        <div class="collection-card">
          <h3 style="color: #4791B1; margin-bottom: 1rem;">üéµ Music</h3>
          <p style="margin-bottom: 1rem;">Mixes, remixes, and production notes</p>
          <button class="btn-primary" onclick="manageCollection('music')">Manage Music</button>
        </div>

        <!-- Making Collection -->
        <div class="collection-card">
          <h3 style="color: #4791B1; margin-bottom: 1rem;">üî® Making</h3>
          <p style="margin-bottom: 1rem;">DIY projects, woodworking, and crafts</p>
          <button class="btn-primary" onclick="manageCollection('making')">Manage Making</button>
        </div>

        <!-- Movement Collection -->
        <div class="collection-card">
          <h3 style="color: #4791B1; margin-bottom: 1rem;">üèÉ‚Äç‚ôÄÔ∏è Movement</h3>
          <p style="margin-bottom: 1rem;">Monthly fitness tracking and reflections</p>
          <button class="btn-primary" onclick="manageCollection('movement')">Manage Movement</button>
        </div>

        <!-- Thoughts Collection -->
        <div class="collection-card">
          <h3 style="color: #4791B1; margin-bottom: 1rem;">üí≠ Thoughts</h3>
          <p style="margin-bottom: 1rem;">Essays, musings, and reflections</p>
          <button class="btn-primary" onclick="manageCollection('thoughts')">Manage Thoughts</button>
        </div>

        <!-- Consuming Collection -->
        <div class="collection-card">
          <h3 style="color: #4791B1; margin-bottom: 1rem;">üìö Consuming</h3>
          <p style="margin-bottom: 1rem;">Movies, books, games, and food</p>
          <button class="btn-primary" onclick="manageCollection('consuming')">Manage Consuming</button>
        </div>

        <!-- Work Collection -->
        <div class="collection-card">
          <h3 style="color: #4791B1; margin-bottom: 1rem;">üíª Work</h3>
          <p style="margin-bottom: 1rem;">Development projects and portfolio</p>
          <button class="btn-primary" onclick="manageCollection('work')">Manage Work</button>
        </div>
      </div>
    </div>
  </div>

  <script>
    // Check authentication status on page load
    window.addEventListener('load', checkAuth);

    async function checkAuth() {
      const token = localStorage.getItem('github_token');
      if (token) {
        try {
          const response = await fetch('https://api.github.com/user', {
            headers: {
              'Authorization': `token ${token}`,
              'Accept': 'application/vnd.github.v3+json'
            }
          });
          
          if (response.ok) {
            const user = await response.json();
            // Only allow specific users (you can add more usernames if needed)
            const allowedUsers = ['jolyssa', 'JojoW']; // Add your GitHub username(s)
            
            if (allowedUsers.includes(user.login)) {
              showDashboard(user);
            } else {
              localStorage.removeItem('github_token');
              showError(`Access denied. This admin is for joji only.`);
              showLogin();
            }
          } else {
            localStorage.removeItem('github_token');
            showLogin();
          }
        } catch (error) {
          localStorage.removeItem('github_token');
          showLogin();
        }
      } else {
        showLogin();
      }
    }

    function showLogin() {
      document.getElementById('login-section').style.display = 'block';
      document.getElementById('dashboard-section').style.display = 'none';
    }

    function showDashboard(user) {
      document.getElementById('login-section').style.display = 'none';
      document.getElementById('dashboard-section').style.display = 'block';
      document.getElementById('user-info').textContent = `Welcome, ${user.name || user.login}`;
    }

    function loginWithGitHub() {
      // Start OAuth flow
      const clientId = 'Ov23lidib8dCTTNo1cax';
      const redirectUri = `${window.location.origin}/functions/auth`;
      const scope = 'repo,user';
      const state = Math.random().toString(36).substring(2, 15);
      
      localStorage.setItem('oauth_state', state);
      
      const authUrl = `https://github.com/login/oauth/authorize?client_id=${clientId}&redirect_uri=${encodeURIComponent(redirectUri)}&scope=${scope}&state=${state}`;
      
      console.log('Redirecting to:', authUrl); // Debug log
      window.location.href = authUrl;
    }

    function logout() {
      localStorage.removeItem('github_token');
      localStorage.removeItem('oauth_state');
      showLogin();
    }

    function manageCollection(collection) {
      // For now, redirect to GitHub to edit files directly
      const repoUrl = 'https://github.com/jolyssa/jolyssa-space';
      const contentPath = `tree/main/src/content/${collection}`;
      window.open(`${repoUrl}/${contentPath}`, '_blank');
    }

    // Handle OAuth callback
    const urlParams = new URLSearchParams(window.location.search);
    const code = urlParams.get('code');
    const state = urlParams.get('state');
    const storedState = localStorage.getItem('oauth_state');

    if (code && state && state === storedState) {
      // Exchange code for token using our Cloudflare Function
      exchangeCodeForToken(code);
    }

    async function exchangeCodeForToken(code) {
      try {
        const response = await fetch(`/functions/auth?code=${code}`);
        
        if (response.ok) {
          // The auth function should return the token or set it
          // For now, we'll simulate getting the token
          const data = await response.text();
          
          // Extract token from response (this depends on how the function returns it)
          // For now, let's try to get it from the redirect or response
          checkAuth(); // Re-check auth status
        } else {
          showError('Authentication failed. Please try again.');
        }
      } catch (error) {
        showError('Authentication failed. Please try again.');
      }
    }

    function showError(message) {
      const errorDiv = document.getElementById('login-error');
      errorDiv.textContent = message;
      errorDiv.style.display = 'block';
    }

    // Listen for messages from popup windows (for OAuth callback)
    window.addEventListener('message', function(event) {
      if (event.data && event.data.type === 'authorization:github:success') {
        localStorage.setItem('github_token', event.data.token);
        checkAuth();
      }
    });
  </script>
</body>
</html>